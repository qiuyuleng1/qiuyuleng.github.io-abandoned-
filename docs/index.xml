<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>My New Hugo Site</title>
    <link>http://example.org/</link>
    <description>Recent content on My New Hugo Site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 16 Jan 2023 14:30:45 +0800</lastBuildDate><atom:link href="http://example.org/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Docker in Action</title>
      <link>http://example.org/stage2/docker-in-action/</link>
      <pubDate>Mon, 16 Jan 2023 14:30:45 +0800</pubDate>
      
      <guid>http://example.org/stage2/docker-in-action/</guid>
      <description>Introduction Chapter 1: Welcome to Docker Docker make it easier for users to install and run the software. Docker is a tool helping solve common problems such as installing, removing, upgrading, distributing, trusting and running software, helping system administrators focus on higher-value activities. What is Docker? Docker is an open source project for building, shipping and running programs. containers Install Docker https://docs.docker.com/engine/install/ubuntu/#install-using-the-repository Take care of the setting of proxy https://docs.docker.com/config/daemon/systemd/#httphttps-proxy https://docs.</description>
    </item>
    
    <item>
      <title>First Post</title>
      <link>http://example.org/posts/first-post/</link>
      <pubDate>Mon, 16 Jan 2023 14:19:33 +0800</pubDate>
      
      <guid>http://example.org/posts/first-post/</guid>
      <description> HEllo world # </description>
    </item>
    
    <item>
      <title></title>
      <link>http://example.org/stage2/k8s-in-action/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/stage2/k8s-in-action/</guid>
      <description>第一章：Kubernetes 介绍
Kubernetes 通过对实际硬件做抽象，然后将自身暴露成一个平台，用于部署和运行应用程序。它允许开发者自己配置和部署应用程序，而不需要系统管理员的帮助，让开发者聚焦于保持底层基础设施运转正常的同时，不需要关注实际运行在平台上的应用程序。
K8s系统由一个主节点和若干个工作节点组成。开发者把一个应用列表提交到主节点，k8s会把它们部署到集群的工作节点。组件被具体部署在哪个节点对于开发者和系统管理员来说都不用关心。
第二章：开始使用K8S和Docker
kubectl cluster-info 展示集群信息
kubectl get 列出各种kubernetes对象的基本信息, e.g., kubectl get nodes kubectl describe node xxx 查看更详细的信息
为kubectl创建别名 alias k=kubectl , tab命令补全
pod: 一组紧密相关的容器，运行在同一个工作节点上，同一个linux命名空间内
不能用kubectl get 列出单个容器，因为它们不是独立的k8s对象，但是可以列出pod，kubectl get pods
调度scheduling：将pod分配给一个节点
kubectl expose re kubia &amp;ndash;type=LoadBalancer &amp;ndash;name kubia-http 创建外部的负载均衡，可以通过负载均衡的公共ip访问pod
kubia-http服务：解决不断变化的pod IP地址的问题
ReplicationController：负责pod并让它们保持运行
第三章：pod: 运行于Kubernetes中的容器 介绍pod
一个pod不会跨越多个工作节点
想象一个由多个进程组成的应用程序，由于不能将多个进程聚集在一个单独的容器中（很难确定每个进程分别记录了什么），我们需要用pod将容器绑定在一起，作为一个单元进行管理
Kubernetes 通过配置Docker 来让一个pod 内的所有容器共享相同的Linux 命名空间、网络、IPC（进程间通信）命名空间，可以通过IPC进行通信。也可以共享PID命名空间。
同一pod 中的容器运行的多个进程需要注意不能绑定到相同的端口号（共享network命名空间），否则会导致端口冲突。
容器可以通过localhost与同一pod中的其他容器进行通信。
每个pod都可以通过其他pod 的IP 地址来实现相互访问，它们之间没有NAT (网络地址转换） 网关，不管是不是在不同的server上。
这个平面网络是由额外的软件基于真实链路实现的。
通过pod合理管理容器
我们应该将应用程序组织到多个pod 中， 而每个pod 只包含紧密相关的组件或进程。
多层应用分担到多个pod中，提高基础架构的利用率 pod是扩缩容的基本单位，不同组件有不同的扩缩容要求</description>
    </item>
    
  </channel>
</rss>
